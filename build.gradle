buildscript {
    ext {
        kotlin_version = '1.2.41'
        ktor_version = '0.9.2'
        spotify_api_vesrion = '2.0.2'
        jrawVersion = '1.0.0'
        junit_version = '5.2.0'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'me.avo'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin'

task stage(dependsOn: ['fatJar', 'clean'])
build.mustRunAfter clean

task fatJar(type: Jar) {
    manifest {
        attributes 'Compile-Title': 'spottit',
                'Compile-Version': version,
                'Main-Class': 'me.avo.spottit.MainKt'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    with jar
}

repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/kotlin/ktor" }
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    /* API */
    compile "se.michaelthelin.spotify:spotify-web-api-java:$spotify_api_vesrion"
    compile "net.dean.jraw:JRAW:$jrawVersion"

    /* Server */
    compile group: "io.ktor", name: "ktor-server-core", version: ktor_version
    compile group: "io.ktor", name: "ktor-server-netty", version: ktor_version
    compile "io.ktor:ktor-freemarker:$ktor_version"

    /* Http Client */
    compile "io.ktor:ktor-client-core:$ktor_version"
    compile "io.ktor:ktor-client-apache:$ktor_version"
    compile "io.ktor:ktor-client-json:$ktor_version"

    /* Util */
    runtime group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile 'com.github.salomonbrys.kodein:kodein:4.1.0'
    compile 'com.github.salomonbrys.kotson:kotson:2.5.0'
    compile 'org.yaml:snakeyaml:1.21'
    compile 'com.beust:jcommander:1.72'

    testCompile group: 'org.amshove.kluent', name: 'kluent', version: '1.38'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit_version
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_version"
}

test {
    useJUnitPlatform {
        excludeTags 'slow'
        includeEngines 'junit-jupiter'
    }

    failFast = false
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
kotlin {
    experimental {
        coroutines "enable"
    }
}